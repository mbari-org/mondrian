/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("org.openjfx.javafxplugin") version "0.0.14"
    id("com.github.ben-manes.versions") version "0.46.0"
    id("com.adarshr.test-logger") version "3.2.0"
}

//java {
//    sourceCompatibility = JavaVersion.VERSION_20
//    targetCompatibility = JavaVersion.VERSION_20
//}

javafx {
    version = "20.0.1"
    modules = listOf("javafx.controls", "javafx.fxml", "javafx.media")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name = "MBARI"
        url = uri("https://maven.pkg.github.com/mbari-org/maven")
        credentials {
            username = project.findProperty("gpr.user") as String? ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") as String? ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    // This dependency is used by the application.
    implementation("com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.2")
    implementation("com.github.ben-manes.caffeine:caffeine:3.1.6")
    implementation("com.github.mizosoft.methanol:methanol:1.7.0")
    implementation("com.google.code.gson:gson:2.10.1")
    implementation("com.squareup.okhttp3:logging-interceptor:3.14.4")
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("org.controlsfx:controlsfx:11.1.2")
    implementation("org.mbari.commons:jcommons:0.0.6")
    implementation("org.mbari.vars:org.mbari.vars.core:1.2.3")
    implementation("org.mbari.vars:org.mbari.vars.services:1.2.3")
    implementation("org.mbari.vcr4j:vcr4j-core:5.2.0")
    implementation("org.mbari:imgfx:0.0.15")
    runtimeOnly("org.jetbrains.kotlin:kotlin-stdlib:1.8.21")
//    implementation("io.github.palexdev:materialfx:11.16.1")
    runtimeOnly("org.slf4j:slf4j-jdk-platform-logging:2.0.7")
    runtimeOnly("ch.qos.logback:logback-classic:1.4.7")
}


testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.9.1")

        }
    }
}

tasks.named<Test>("test") {
    useJUnitPlatform()

    maxHeapSize = "1G"

    testLogging {
        events("passed")
    }
}

application {
    // Define the main class for the application.
//    mainModule.set("org.mbari.mondrian")
    mainClass.set("org.mbari.mondrian.App")
}
