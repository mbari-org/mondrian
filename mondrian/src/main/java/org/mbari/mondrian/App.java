/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.mbari.mondrian;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.stage.Stage;
import org.mbari.mondrian.javafx.AppPaneController;
import org.mbari.mondrian.javafx.dialogs.AlertController;
import org.mbari.mondrian.msg.messages.PrepareForShutdownMsg;
import org.mbari.mondrian.msg.messages.ShowAlertMsg;
import org.mbari.mondrian.util.JFXUtilities;


public class App extends Application {

    private static final System.Logger log = System.getLogger(App.class.getSimpleName());


    @Override
    public void start(Stage stage) throws Exception {

        // This must be done BEFORE constructing toolbox in
        // order to show users errors that might occur
        // During toolbox construction
        var rx = Initializer.getEventBus().toObserverable();

        rx.subscribe(event -> log.log(System.Logger.Level.DEBUG, event));

        rx.ofType(ShowAlertMsg.class)
                .subscribe(this::showAlert);

        final ToolBox toolbox = Initializer.getToolBox();
        var appController = new AppController(toolbox);
        var appPaneController = new AppPaneController(toolbox);

        var scene = new Scene(appPaneController.getRoot(), 640, 480);
        stage.setScene(scene);

        // Save/load previous size
        final Class clazz = getClass();
        JFXUtilities.loadStageSize(stage, clazz);
        stage.setOnCloseRequest(e -> {
            // Save size on exit
            JFXUtilities.saveStageSize(stage, clazz);
            Platform.exit();
            System.exit(0);
        });
        stage.show();

        Runtime.getRuntime()
                .addShutdownHook(new Thread(() ->
                        toolbox.eventBus().publish(new PrepareForShutdownMsg())));

    }

    private void showAlert(ShowAlertMsg msg) {
        Platform.runLater(() -> {
            var alertController = new AlertController(msg.alertType(),
                    Initializer.getI18n(),
                    Initializer.getStylesheets());
            alertController.showAndWait(msg.title(), msg.header(), msg.content(), msg.exception());
        });
    }





    public static void main(String[] args) {
        System.getProperties().setProperty("user.timezone", "UTC");
        //Log uncaught Exceptions
        Thread.setDefaultUncaughtExceptionHandler((thread, ex) -> {
            log.log(System.Logger.Level.ERROR, "Exception in thread [" + thread.getName() + "]", ex);
        });
        launch(args);
    }
}